// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  nome           String
  email          String   @unique
  cpf            String   @unique
  telefone       String
  dataNascimento String
  senha          String
  tipo           String   @default("paciente")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Agendamento {
  id                 String   @id @default(cuid())
  nome              String
  email             String
  telefone          String
  preferencia_contato String
  periodo            String
  servico           String
  status            String   @default("pendente")
  data              String
  horario           String
  profissional      String   @default("Dra. Maria Zanetti")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("agendamentos")
}

model PlanoAlimentar {
  id           String     @id @default(cuid())
  pacienteId   String
  observacoes  String
  refeicoes    Refeicao[]
  atualizadoEm DateTime   @default(now())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("planos_alimentares")
}

model Refeicao {
  id              String         @id @default(cuid())
  titulo          String
  horario         String
  alimentos       Alimento[]
  planoAlimentar  PlanoAlimentar @relation(fields: [planoAlimentarId], references: [id], onDelete: Cascade)
  planoAlimentarId String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@map("refeicoes")
}

model Alimento {
  id          String   @id @default(cuid())
  descricao   String
  refeicao    Refeicao @relation(fields: [refeicaoId], references: [id], onDelete: Cascade)
  refeicaoId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("alimentos")
}
